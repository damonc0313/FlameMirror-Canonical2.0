name: CI

on:
  push:
    branches:
      - "**"
  pull_request:
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.11"

jobs:
  notebook:
    name: Execute demo notebook
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install project
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Run demo notebook
        run: |
          python -m nbconvert --to notebook --execute --output demo-executed.ipynb examples/demo.ipynb
      - name: Upload executed notebook
        uses: actions/upload-artifact@v4
        with:
          name: executed-notebooks
          path: demo-executed.ipynb

  tests:
    name: Pytest (coverage â‰¥ 90%)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install project
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Run pytest with coverage
        run: pytest --cov=src --cov-report=xml --cov-report=term --cov-fail-under=90
      - name: Upload coverage xml
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  lint:
    name: Ruff lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install project
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Run ruff
        run: ruff check src/flamemirror tests

  typing:
    name: mypy --strict
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install project
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Run mypy
        run: mypy --strict src/

  security:
    name: Bandit scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install project
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
          pip install bandit
      - name: Run bandit
        run: python -m bandit -r src

  docker-build:
    name: Docker build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build docker image
        run: docker build . -f Dockerfile -t flamemirror:ci
